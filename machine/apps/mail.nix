{
  config, lib, ...
}:
let
  lldap = config.services.lldap.settings;
  hostname = "mail.systemlos.org";
  primaryDomain = "systemlos.org";
  baseDN = "dc=systemlos,dc=org";
in {
  services.maddy = {
    enable = true;
    user = "maddy";
    group = "maddy";
    primaryDomain = "${primaryDomain}";
    # dn_template "cn={username},ou=people,dc=${rootDomain},dc=${topDomain}"
    config = ''
      # Base variables
      $(hostname) = ${hostname}
      $(primary_domain) = ${primaryDomain}
      $(local_domains) = $(primary_domain)
      tls file /var/lib/acme/$(hostname)/cert.pem /var/lib/acme/$(hostname)}/key.pem

      # Storage
      storage.imapsql local_mailboxes {
        driver postgres
        dsn "user=maddy database=maddy host=/run/postgresql"
        msg_store storage.blob.fs /var/lib/maddy/storage
      }

      # Authentication
      auth.ldap local_ldap {
        urls ldap://${lldap.ldap_host}:${toString lldap.ldap_port}

        bind plain "cn=system,ou=people,${baseDN}" "{env:MADDY_LDAP_PASSWORD}"
        base_dn "${baseDN}"

        starttls off
        debug off
        connect_timeout 1m
      }

      # SMTP endpoints
      hostname $(hostname)

      table.chain local_rewrites {
        optional_step regexp "(.+)\+(.+)@(.+)" "$1@$3"
        optional_step static {
          entry postmaster postmaster@$(primary_domain)
        }
        optional_step file /var/lib/maddy/aliases
      }

      msgpipeline local_routing {
        # Insert handling for special-purpose local domains here.
        # e.g.
        # destination lists.example.org {
        #     deliver_to lmtp tcp://127.0.0.1:8024
        # }

        destination postmaster $(local_domains) {
            modify {
                replace_rcpt &local_rewrites
            }

            deliver_to &local_mailboxes
        }

        default_destination {
            reject 550 5.1.1 "User doesn't exist"
        }
      }

      smtp tcp://0.0.0.0:25 {
        limits {
          # Up to 20 msgs/sec across max. 10 SMTP connections.
          all rate 20 1s
          all concurrency 10
        }

        dmarc yes
        check {
          require_mx_record
          dkim
          spf
        }

        source $(local_domains) {
          reject 501 5.1.8 "Use Submission for outgoing SMTP"
        }

        default_source {
          destination postmaster $(local_domains) {
            deliver_to &local_routing
          }

          default_destination {
              eject 550 5.1.1 "User doesn't exist"
          }
        }
      }

      submission tls://0.0.0.0:465 tcp://0.0.0.0:587 {
        limits {
          # Up to 50 msgs/sec across any amount of SMTP connections.
          all rate 100 1s
        }

        auth &local_ldap

        source $(local_domains) {
          check {
            authorize_sender {
              prepare_email &local_rewrites
              user_to_email identity
            }
          }

          destination postmaster $(local_domains) {
            deliver_to &local_routing
          }
          default_destination {
            modify {
              dkim $(primary_domain) $(local_domains) default
            }
            deliver_to &remote_queue
          }
        }

        default_source {
          reject 501 5.1.8 "Non-local sender domain"
        }
      }

      target.remote outbound_delivery {
        limits {
          # Up to 20 msgs/sec across max. 10 SMTP connections
          # for each recipient domain.
          destination rate 20 1s
          destination concurrency 10
        }
        mx_auth {
          dane
          mtasts {
            cache fs
            fs_dir mtasts_cache/
          }
          local_policy {
            min_tls_level encrypted
            min_mx_level none
          }
        }
      }

      target.queue remote_queue {
        target &outbound_delivery

        autogenerated_msg_domain $(primary_domain)
        bounce {
          destination postmaster $(local_domains) {
            deliver_to &local_routing
          }
          default_destination {
            reject 550 5.0.0 "Refusing to send DSNs to non-local addresses"
          }
        }
      }

      # IMAP
      imap tcp://0.0.0.0:143 tls://0.0.0.0:993 {
        auth &local_ldap
        storage @local_mailboxes
      }

      openmetrics tcp://127.0.0.1:9749 { }
    '';
  };

  networking.firewall.allowedTCPPorts = [ 143 993 465 587 ];

  # TODO mail client
  services.nginx.virtualHosts."${hostname}" = {
    globalRedirect = "https://aktivistisch.de";
    enableACME = true;
    forceSSL = true;
  };

  security.acme.certs."${hostname}".group = config.services.maddy.group;
  users.users.nginx.extraGroups = ["${config.services.maddy.group}"];


  services.postgresql.ensureDatabases = ["maddy"];
  services.postgresql.ensureUsers = lib.singleton {
    name = "maddy";
    ensureDBOwnership = true;
  };
}
